# mermaid.live
stateDiagram-v2
    direction LR
    state n0 <<choice>>
    [*] --> n0: &ltidentifier&gt
    n0 --> Local: local
    n0 --> TypeVar: typeVar
    n0 --> Member: member
    n0 --> Member: (unresolved)
    n0 --> Type: type
    n0 --> Prefix: prefix
    n0 --> Extension: extension
    [*] --> Super: super
    Local --> LocalInvocation: &ltargumentPart&gt
    Member --> StaticOrImplicitThisInvocation: &ltargumentPart&gt
    Type --> ConstructorInvocation: &ltargumentPart&gt
    Extension --> ExtensionOverride: &ltargumentPart&gt
    ExtensionOverride --> ExtensionCallInvocation: &ltargumentPart&gt
    Super --> SuperCallInvocation: &ltargumentPart&gt
    Constructor --> ConstructorInvocation: &ltargumentPart&gt
    ExtensionMember --> ExtensionInvocation: &ltargumentPart&gt
    SuperMember --> SuperInvocation: &ltargumentPart&gt
    Local --> LocalTearoff: &lttypeArguments&gt
    Member --> StaticOrImplicitThisTearoff: &lttypeArguments&gt
    Type --> TypeInstantiation: &lttypeArguments&gt
    ExtensionOverride --> ExtensionCallTearoff: &lttypeArguments&gt
    Super --> SuperCallTearoff: &lttypeArguments&gt
    Constructor --> ConstructorTearoff: &lttypeArguments&gt
    ExtensionMember --> ExtensionTearoff: &lttypeArguments&gt
    SuperMember --> SuperTearoff: &lttypeArguments&gt
    state n3 <<choice>>
    Type --> n3: `.` &ltidentifier&gt
    n3 --> Member: member
    n3 --> Constructor: constructor
    state n4 <<choice>>
    Prefix --> n4: `.` &ltidentifier&gt
    n4 --> Member: member
    n4 --> Type: type
    n4 --> Extension: extension
    TypeInstantiation --> Constructor: `.` &ltidentifier&gt
    Extension --> Member: `.` &ltidentifier&gt
    ExtensionOverride --> ExtensionMember: (`.` | `?.`) &ltidentifier&gt
    Super --> SuperMember: `.` &ltidentifier&gt
    ExtensionOverride --> ExtensionIndexInvocation: `?`? `[` &ltexpression&gt `]`
    Super --> SuperIndexInvocation: `[` &ltexpression&gt `]`
    classDef notAccepting fill:#f88
    class Prefix, Extension, ExtensionOverride, Super notAccepting
